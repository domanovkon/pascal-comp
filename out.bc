; ModuleID = 'main'
source_filename = "main"

@0 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%i\0A\00", align 1
@3 = private unnamed_addr constant [7 x i8] c"Sorted\00", align 1
@4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%i\0A\00", align 1

define void @main() {
entry:
  %i = alloca i64
  %j = alloca i64
  %temp = alloca i64
  %arr = alloca i64, i64 6
  %0 = getelementptr i64, i64* %arr, i64 0
  store i64 4, i64* %0
  %1 = getelementptr i64, i64* %arr, i64 1
  store i64 -2, i64* %1
  %2 = getelementptr i64, i64* %arr, i64 2
  store i64 12, i64* %2
  %3 = getelementptr i64, i64* %arr, i64 3
  store i64 5, i64* %3
  %4 = getelementptr i64, i64* %arr, i64 4
  store i64 -4, i64* %4
  %5 = getelementptr i64, i64* %arr, i64 5
  store i64 -10, i64* %5
  %printfCall = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i32 0, i32 0))
  store i64 0, i64* %i
  %6 = load i64, i64* %i
  %cmptmp = icmp ult i64 %6, 6
  %7 = icmp ne i1 %cmptmp, false
  br i1 %7, label %forloop, label %forcont

forloop:                                          ; preds = %forloop, %entry
  %8 = load i64, i64* %i
  %9 = getelementptr i64, i64* %arr, i64 %8
  %10 = load i64, i64* %9
  %printfCall1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i64 %10)
  %11 = load i64, i64* %i
  %addftmp = add i64 %11, 1
  store i64 %addftmp, i64* %i
  %12 = load i64, i64* %i
  %cmptmp2 = icmp ult i64 %12, 6
  %13 = icmp ne i1 %cmptmp2, false
  br i1 %13, label %forloop, label %forcont

forcont:                                          ; preds = %forloop, %entry
  store i64 0, i64* %i
  %14 = load i64, i64* %i
  %cmptmp4 = icmp ult i64 %14, 5
  %15 = icmp ne i1 %cmptmp4, false
  br i1 %15, label %forloop3, label %forcont15

forloop3:                                         ; preds = %forcont12, %forcont
  store i64 0, i64* %j
  %16 = load i64, i64* %j
  %cmptmp6 = icmp ult i64 %16, 6
  %17 = icmp ne i1 %cmptmp6, false
  br i1 %17, label %forloop5, label %forcont12

forloop5:                                         ; preds = %ifcont, %forloop3
  %18 = load i64, i64* %j
  %addtmp = add i64 %18, 1
  %19 = getelementptr i64, i64* %arr, i64 %addtmp
  %20 = load i64, i64* %19
  %21 = load i64, i64* %j
  %22 = getelementptr i64, i64* %arr, i64 %21
  %23 = load i64, i64* %22
  %cmptmp7 = icmp sle i64 %20, %23
  %24 = icmp ne i1 %cmptmp7, false
  br i1 %24, label %then, label %ifcont

then:                                             ; preds = %forloop5
  %25 = load i64, i64* %j
  %addtmp8 = add i64 %25, 1
  %26 = getelementptr i64, i64* %arr, i64 %addtmp8
  %27 = load i64, i64* %26
  store i64 %27, i64* %temp
  %28 = load i64, i64* %j
  %29 = getelementptr i64, i64* %arr, i64 %28
  %30 = load i64, i64* %29
  %31 = load i64, i64* %j
  %addtmp9 = add i64 %31, 1
  %32 = getelementptr i64, i64* %arr, i64 %addtmp9
  store i64 %30, i64* %32
  %33 = load i64, i64* %temp
  %34 = load i64, i64* %j
  %35 = getelementptr i64, i64* %arr, i64 %34
  store i64 %33, i64* %35
  br label %ifcont

ifcont:                                           ; preds = %then, %forloop5
  %36 = load i64, i64* %j
  %addtmp10 = add i64 %36, 1
  store i64 %addtmp10, i64* %j
  %37 = load i64, i64* %j
  %cmptmp11 = icmp ult i64 %37, 6
  %38 = icmp ne i1 %cmptmp11, false
  br i1 %38, label %forloop5, label %forcont12

forcont12:                                        ; preds = %ifcont, %forloop3
  %39 = load i64, i64* %i
  %addftmp13 = add i64 %39, 1
  store i64 %addftmp13, i64* %i
  %40 = load i64, i64* %i
  %cmptmp14 = icmp ult i64 %40, 5
  %41 = icmp ne i1 %cmptmp14, false
  br i1 %41, label %forloop3, label %forcont15

forcont15:                                        ; preds = %forcont12, %forcont
  %printfCall16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i32 0, i32 0))
  store i64 0, i64* %i
  %42 = load i64, i64* %i
  %cmptmp18 = icmp ult i64 %42, 6
  %43 = icmp ne i1 %cmptmp18, false
  br i1 %43, label %forloop17, label %forcont22

forloop17:                                        ; preds = %forloop17, %forcont15
  %44 = load i64, i64* %i
  %45 = getelementptr i64, i64* %arr, i64 %44
  %46 = load i64, i64* %45
  %printfCall19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i64 %46)
  %47 = load i64, i64* %i
  %addftmp20 = add i64 %47, 1
  store i64 %addftmp20, i64* %i
  %48 = load i64, i64* %i
  %cmptmp21 = icmp ult i64 %48, 6
  %49 = icmp ne i1 %cmptmp21, false
  br i1 %49, label %forloop17, label %forcont22

forcont22:                                        ; preds = %forloop17, %forcont15
  ret void
}

declare i32 @printf(i8*, ...)
